import swaggerJsdoc from "swagger-jsdoc";

const options: swaggerJsdoc.Options = {
  definition: {
    openapi: "3.0.0",
    info: {
      title: "Salesforce Clone API",
      version: "1.0.0",
      description:
        "API documentation for the Salesforce Sales Cloud Clone. This API follows the object-oriented structure of the official Salesforce REST API.",
    },
    components: {
      schemas: {
        Lead: {
          type: "object",
          properties: {
            id: { type: "integer" },
            salutation: { type: "string", nullable: true },
            first_name: { type: "string" },
            last_name: { type: "string" },
            title: { type: "string", nullable: true },
            company: { type: "string", nullable: true },
            website: { type: "string", nullable: true },
            description: { type: "string", nullable: true },
            email: { type: "string", format: "email" },
            phone: { type: "string", nullable: true },
            street: { type: "string", nullable: true },
            city: { type: "string", nullable: true },
            state_province: { type: "string", nullable: true },
            zip_postal_code: { type: "string", nullable: true },
            country: { type: "string", nullable: true },
            number_of_employees: { type: "integer", nullable: true },
            annual_revenue: {
              type: "number",
              format: "decimal",
              nullable: true,
            },
            industry: { type: "string", nullable: true },
            lead_source: { type: "string", nullable: true },
            status: { type: "string" },
            lead_owner: { type: "string", nullable: true },
            created_at: { type: "string", format: "date-time" },
            updated_at: { type: "string", format: "date-time" },
          },
        },
        LeadInput: {
          type: "object",
          required: ["first_name", "last_name", "email"],
          properties: {
            salutation: { type: "string" },
            first_name: { type: "string" },
            last_name: { type: "string" },
            title: { type: "string" },
            company: { type: "string" },
            website: { type: "string" },
            description: { type: "string" },
            email: { type: "string", format: "email" },
            phone: { type: "string" },
            street: { type: "string" },
            city: { type: "string" },
            state_province: { type: "string" },
            zip_postal_code: { type: "string" },
            country: { type: "string" },
            number_of_employees: { type: "integer" },
            annual_revenue: { type: "number", format: "decimal" },
            industry: { type: "string" },
            lead_source: { type: "string" },
            status: { type: "string", default: "New" },
            lead_owner: { type: "string" },
          },
        },
        Account: {
          type: "object",
          properties: {
            id: { type: "integer" },
            parent_account_id: { type: "integer", nullable: true },
            name: { type: "string" },
            website: { type: "string", nullable: true },
            type: { type: "string", nullable: true },
            description: { type: "string", nullable: true },
            account_owner: { type: "string", nullable: true },
            phone: { type: "string", nullable: true },
            billing_street: { type: "string", nullable: true },
            billing_city: { type: "string", nullable: true },
            billing_state_province: { type: "string", nullable: true },
            billing_zip_postal_code: { type: "string", nullable: true },
            billing_country: { type: "string", nullable: true },
            shipping_street: { type: "string", nullable: true },
            shipping_city: { type: "string", nullable: true },
            shipping_state_province: { type: "string", nullable: true },
            shipping_zip_postal_code: { type: "string", nullable: true },
            shipping_country: { type: "string", nullable: true },
            created_at: { type: "string", format: "date-time" },
            updated_at: { type: "string", format: "date-time" },
          },
        },
        AccountInput: {
          type: "object",
          required: ["name"],
          properties: {
            parent_account_id: { type: "integer" },
            name: { type: "string" },
            website: { type: "string" },
            type: { type: "string" },
            description: { type: "string" },
            account_owner: { type: "string" },
            phone: { type: "string" },
            billing_street: { type: "string" },
            billing_city: { type: "string" },
            billing_state_province: { type: "string" },
            billing_zip_postal_code: { type: "string" },
            billing_country: { type: "string" },
            shipping_street: { type: "string" },
            shipping_city: { type: "string" },
            shipping_state_province: { type: "string" },
            shipping_zip_postal_code: { type: "string" },
            shipping_country: { type: "string" },
          },
        },
        Contact: {
          type: "object",
          properties: {
            id: { type: "integer" },
            account_id: { type: "integer" },
            reports_to_contact_id: { type: "integer", nullable: true },
            salutation: { type: "string", nullable: true },
            first_name: { type: "string" },
            last_name: { type: "string" },
            title: { type: "string", nullable: true },
            description: { type: "string", nullable: true },
            contact_owner: { type: "string", nullable: true },
            email: { type: "string", format: "email" },
            phone: { type: "string", nullable: true },
            mailing_street: { type: "string", nullable: true },
            mailing_city: { type: "string", nullable: true },
            mailing_state_province: { type: "string", nullable: true },
            mailing_zip_postal_code: { type: "string", nullable: true },
            mailing_country: { type: "string", nullable: true },
            created_at: { type: "string", format: "date-time" },
            updated_at: { type: "string", format: "date-time" },
          },
        },
        ContactInput: {
          type: "object",
          required: ["first_name", "last_name", "email", "account_id"],
          properties: {
            account_id: { type: "integer" },
            reports_to_contact_id: { type: "integer" },
            salutation: { type: "string" },
            first_name: { type: "string" },
            last_name: { type: "string" },
            title: { type: "string" },
            description: { type: "string" },
            contact_owner: { type: "string" },
            email: { type: "string", format: "email" },
            phone: { type: "string" },
            mailing_street: { type: "string" },
            mailing_city: { type: "string" },
            mailing_state_province: { type: "string" },
            mailing_zip_postal_code: { type: "string" },
            mailing_country: { type: "string" },
          },
        },
        Opportunity: {
          type: "object",
          properties: {
            id: { type: "integer" },
            account_id: { type: "integer" },
            name: { type: "string" },
            amount: { type: "number", format: "decimal", nullable: true },
            close_date: { type: "string", format: "date" },
            description: { type: "string", nullable: true },
            opportunity_owner: { type: "string", nullable: true },
            stage: { type: "string" },
            probability: { type: "number", format: "decimal", nullable: true },
            forecast_category: { type: "string" },
            next_step: { type: "string", nullable: true },
            created_at: { type: "string", format: "date-time" },
            updated_at: { type: "string", format: "date-time" },
          },
        },
        OpportunityInput: {
          type: "object",
          required: ["name", "stage", "close_date", "account_id"],
          properties: {
            account_id: { type: "integer" },
            name: { type: "string" },
            amount: { type: "number", format: "decimal" },
            close_date: { type: "string", format: "date" },
            description: { type: "string" },
            opportunity_owner: { type: "string" },
            stage: { type: "string" },
            probability: { type: "number", format: "decimal" },
            forecast_category: { type: "string" },
            next_step: { type: "string" },
          },
        },
        ConvertLeadResult: {
          type: "object",
          properties: {
            newAccount: { $ref: "#/components/schemas/Account" },
            newContact: { $ref: "#/components/schemas/Contact" },
            newOpportunity: { $ref: "#/components/schemas/Opportunity" },
          },
        },
      },
    },
  },
  apis: ["./src/app/api/**/*.ts"],
};

export const swaggerSpec = swaggerJsdoc(options);
