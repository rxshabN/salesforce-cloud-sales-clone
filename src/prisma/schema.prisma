generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model accounts {
  id                       Int             @id @default(autoincrement())
  parent_account_id        Int?
  name                     String          @db.VarChar(255)
  website                  String?         @db.VarChar(255)
  type                     String?         @db.VarChar(100)
  description              String?
  account_owner            String?         @db.VarChar(255)
  phone                    String?         @db.VarChar(50)
  billing_street           String?
  billing_city             String?         @db.VarChar(100)
  billing_state_province   String?         @db.VarChar(100)
  billing_zip_postal_code  String?         @db.VarChar(20)
  billing_country          String?         @db.VarChar(100)
  shipping_street          String?
  shipping_city            String?         @db.VarChar(100)
  shipping_state_province  String?         @db.VarChar(100)
  shipping_zip_postal_code String?         @db.VarChar(20)
  shipping_country         String?         @db.VarChar(100)
  created_at               DateTime?       @default(now()) @db.Timestamptz(6)
  updated_at               DateTime?       @default(now()) @db.Timestamptz(6)
  accounts                 accounts?       @relation("accountsToaccounts", fields: [parent_account_id], references: [id], onUpdate: NoAction)
  other_accounts           accounts[]      @relation("accountsToaccounts")
  contacts                 contacts[]
  opportunities            opportunities[]

  @@index([name], map: "idx_accounts_name")
}

model contacts {
  id                      Int        @id @default(autoincrement())
  account_id              Int
  reports_to_contact_id   Int?
  salutation              String?    @db.VarChar(20)
  first_name              String     @db.VarChar(100)
  last_name               String     @db.VarChar(100)
  title                   String?    @db.VarChar(100)
  description             String?
  contact_owner           String?    @db.VarChar(255)
  email                   String     @unique @db.VarChar(255)
  phone                   String?    @db.VarChar(50)
  mailing_street          String?
  mailing_city            String?    @db.VarChar(100)
  mailing_state_province  String?    @db.VarChar(100)
  mailing_zip_postal_code String?    @db.VarChar(20)
  mailing_country         String?    @db.VarChar(100)
  created_at              DateTime?  @default(now()) @db.Timestamptz(6)
  updated_at              DateTime?  @default(now()) @db.Timestamptz(6)
  accounts                accounts   @relation(fields: [account_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  contacts                contacts?  @relation("contactsTocontacts", fields: [reports_to_contact_id], references: [id], onUpdate: NoAction)
  other_contacts          contacts[] @relation("contactsTocontacts")

  @@index([account_id], map: "idx_contacts_account_id")
  @@index([email], map: "idx_contacts_email")
}

model leads {
  id                  Int       @id @default(autoincrement())
  salutation          String?   @db.VarChar(20)
  first_name          String    @db.VarChar(100)
  last_name           String    @db.VarChar(100)
  title               String?   @db.VarChar(100)
  company             String?   @db.VarChar(255)
  website             String?   @db.VarChar(255)
  description         String?
  email               String    @unique @db.VarChar(255)
  phone               String?   @db.VarChar(50)
  street              String?
  city                String?   @db.VarChar(100)
  state_province      String?   @db.VarChar(100)
  zip_postal_code     String?   @db.VarChar(20)
  country             String?   @db.VarChar(100)
  number_of_employees Int?
  annual_revenue      Decimal?  @db.Decimal(15, 2)
  industry            String?   @db.VarChar(100)
  lead_source         String?   @db.VarChar(100)
  status              String    @default("New") @db.VarChar(50)
  lead_owner          String?   @db.VarChar(255)
  created_at          DateTime? @default(now()) @db.Timestamptz(6)
  updated_at          DateTime? @default(now()) @db.Timestamptz(6)

  @@index([email], map: "idx_leads_email")
}

model opportunities {
  id                Int       @id @default(autoincrement())
  account_id        Int
  name              String    @db.VarChar(255)
  amount            Decimal?  @db.Decimal(12, 2)
  close_date        DateTime  @db.Date
  description       String?
  opportunity_owner String?   @db.VarChar(255)
  stage             String    @db.VarChar(50)
  probability       Decimal?  @db.Decimal(5, 2)
  forecast_category String    @db.VarChar(50)
  next_step         String?   @db.VarChar(255)
  created_at        DateTime? @default(now()) @db.Timestamptz(6)
  updated_at        DateTime? @default(now()) @db.Timestamptz(6)
  accounts          accounts  @relation(fields: [account_id], references: [id], onUpdate: NoAction)

  @@index([account_id], map: "idx_opportunities_account_id")
  @@index([stage], map: "idx_opportunities_stage")
}
